package GUI;

import smartwatchClientStream.SmartWatchClient;
import smartwatchClientStream.SmartWatchServer;

import javax.swing.*;

public class GUISmartWatch extends javax.swing.JPanel {
    private boolean isServerRunning = false;

    public GUISmartWatch() {
        initComponents();
    }

    private java.io.PrintStream getPrintStreamFor(JTextArea area) {
        return new java.io.PrintStream(new java.io.OutputStream() {
            private StringBuilder buffer = new StringBuilder();

            @Override
            public void write(int b) {
                if (b == '\n') {
                    String line = buffer.toString();
                    buffer.setLength(0);
                    SwingUtilities.invokeLater(() -> area.append(line + "\n"));
                } else {
                    buffer.append((char) b);
                }
            }
        }, true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        startServerSmartWatchButton = new javax.swing.JButton();
        startClientSmartWatchButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaServerSmartWatch = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAreaClientSmartWatch = new javax.swing.JTextArea();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Smart Watch - Client Stream");

        startServerSmartWatchButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        startServerSmartWatchButton.setText("Start Server");
        startServerSmartWatchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startServerSmartWatchButtonActionPerformed(evt);
            }
        });

        startClientSmartWatchButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        startClientSmartWatchButton.setText("Start Client");
        startClientSmartWatchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startClientSmartWatchButtonActionPerformed(evt);
            }
        });

        textAreaServerSmartWatch.setColumns(20);
        textAreaServerSmartWatch.setRows(5);
        jScrollPane1.setViewportView(textAreaServerSmartWatch);

        textAreaClientSmartWatch.setColumns(20);
        textAreaClientSmartWatch.setRows(5);
        jScrollPane2.setViewportView(textAreaClientSmartWatch);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(startServerSmartWatchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(startClientSmartWatchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(16, 16, 16))
            .addGroup(layout.createSequentialGroup()
                .addGap(449, 449, 449)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(startServerSmartWatchButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(startClientSmartWatchButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void startServerSmartWatchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startServerSmartWatchButtonActionPerformed
        if (isServerRunning) {
            return; 
        }
        isServerRunning = true;
        
        new Thread(() -> {
            java.io.PrintStream originalOut = System.out;
            System.setOut(getPrintStreamFor(textAreaServerSmartWatch));
            System.setErr(getPrintStreamFor(textAreaServerSmartWatch));

            try {
                SmartWatchServer.main(new String[]{});
            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                System.setOut(originalOut);
            }
        }).start();
    }//GEN-LAST:event_startServerSmartWatchButtonActionPerformed

    private void startClientSmartWatchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startClientSmartWatchButtonActionPerformed
        if (!isServerRunning) {
            SwingUtilities.invokeLater(() -> 
                textAreaClientSmartWatch.append("Cannot start client: Server is not running.")
            );
        return;
    }
        
        new Thread(() -> {
            java.io.PrintStream originalOut = System.out;
            System.setOut(getPrintStreamFor(textAreaClientSmartWatch));
            System.setErr(getPrintStreamFor(textAreaClientSmartWatch));
            try {
                SmartWatchClient.main(new String[]{});
            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                System.setOut(originalOut);
            }
        }).start();
    }//GEN-LAST:event_startClientSmartWatchButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton startClientSmartWatchButton;
    private javax.swing.JButton startServerSmartWatchButton;
    private javax.swing.JTextArea textAreaClientSmartWatch;
    private javax.swing.JTextArea textAreaServerSmartWatch;
    // End of variables declaration//GEN-END:variables
}
