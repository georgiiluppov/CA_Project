package GUI;

import mobileAppServerStream.MobileAppClient;
import mobileAppServerStream.MobileAppServer;

import javax.swing.*;

public class GUIMobileApp extends javax.swing.JPanel {
    private boolean isServerRunning = false;

    public GUIMobileApp() {
        initComponents();
    }

    private java.io.PrintStream getPrintStreamFor(JTextArea area) {
        return new java.io.PrintStream(new java.io.OutputStream() {
            private StringBuilder buffer = new StringBuilder();

            @Override
            public void write(int b) {
                if (b == '\n') {
                    String line = buffer.toString();
                    buffer.setLength(0);
                    SwingUtilities.invokeLater(() -> area.append(line + "\n"));
                } else {
                    buffer.append((char) b);
                }
            }
        }, true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        startServerMobileApp = new javax.swing.JButton();
        startClientMobileApp = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaMobileAppServer = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAreaMobileAppClient = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Mobile App - Server Stream");

        startServerMobileApp.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        startServerMobileApp.setText("Start Server");
        startServerMobileApp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startServerMobileAppActionPerformed(evt);
            }
        });

        startClientMobileApp.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        startClientMobileApp.setText("Start Client");
        startClientMobileApp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startClientMobileAppActionPerformed(evt);
            }
        });

        textAreaMobileAppServer.setColumns(20);
        textAreaMobileAppServer.setRows(5);
        jScrollPane1.setViewportView(textAreaMobileAppServer);

        textAreaMobileAppClient.setColumns(20);
        textAreaMobileAppClient.setRows(5);
        jScrollPane2.setViewportView(textAreaMobileAppClient);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("There is a 3 seconds delay just to make sure that service is registered");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(startServerMobileApp, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1165, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(startClientMobileApp, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2))
                            .addComponent(jScrollPane2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(464, 464, 464)
                        .addComponent(jLabel1)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(jLabel1)
                .addGap(40, 40, 40)
                .addComponent(startServerMobileApp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startClientMobileApp)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void startServerMobileAppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startServerMobileAppActionPerformed
        if (isServerRunning) {
            return; 
        }
        isServerRunning = true;
        
        new Thread(() -> {
            java.io.PrintStream originalOut = System.out;
            System.setOut(getPrintStreamFor(textAreaMobileAppServer));
            System.setErr(getPrintStreamFor(textAreaMobileAppServer));

            try {
                MobileAppServer.main(new String[]{});
            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                System.setOut(originalOut);
            }
        }).start();
    }//GEN-LAST:event_startServerMobileAppActionPerformed

    private void startClientMobileAppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startClientMobileAppActionPerformed
        if (!isServerRunning) {
            SwingUtilities.invokeLater(() -> 
                textAreaMobileAppClient.append("Cannot start client: Server is not running.")
            );
        return;
    }
        
        new Thread(() -> {
            java.io.PrintStream originalOut = System.out;
            System.setOut(getPrintStreamFor(textAreaMobileAppClient));
            System.setErr(getPrintStreamFor(textAreaMobileAppClient));
            try {
                MobileAppClient.main(new String[]{});
            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                System.setOut(originalOut);
            }
        }).start();
    }//GEN-LAST:event_startClientMobileAppActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton startClientMobileApp;
    private javax.swing.JButton startServerMobileApp;
    private javax.swing.JTextArea textAreaMobileAppClient;
    private javax.swing.JTextArea textAreaMobileAppServer;
    // End of variables declaration//GEN-END:variables
}
